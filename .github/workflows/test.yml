name: Tests
on:
  push:
    branches-ignore:
    - dependabot/**
    - pre-commit-ci-update-config
    - master
  pull_request:
    branches:
    - develop
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Run ${{ matrix.mark }} tests (${{ matrix.python-version }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.11']
        os: [ubuntu-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-tests-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-tests-${{ hashFiles('requirements*.txt') }}
          ${{ runner.os }}-python-${{ matrix.python-version }}-tests-
          ${{ runner.os }}-python
          ${{ runner.os }}-

    - name: Upgrade pip
      run: python -m pip install --upgrade pip setuptools wheel

    - name: Install dependencies
      run: pip install -I -r requirements-test.txt

    - name: Build package
      run: |
        git version
        git tag -l --sort=-creatordate --merged
        python setup.py --version
        python setup.py bdist_wheel sdist

    - name: Run tests
      run: |
        mkdir reports/ || echo "Directory exists"
        pip install -e . --no-build-isolation
        coverage run -m pytest

    - name: Combine coverage
      run: |
        coverage combine
        coverage xml -o reports/coverage-${{ matrix.python-version }}.xml -i

    - name: Upload coverage results
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-${{ matrix.python-version }}
        path: reports/coverage-${{ matrix.python-version }}.xml

  all_done:
    name: Tests done
    runs-on: ubuntu-latest
    needs: [tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download all coverage reports
      uses: actions/download-artifact@v3
      with:
        path: reports

    - name: Move coverage reports to the root folder
      run: find reports -type f -exec mv '{}' reports \;

    - name: Check coverage
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./reports
        fail_ci_if_error: true

    - name: All done
      run: echo 1
